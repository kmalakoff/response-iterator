{"version":3,"sources":["../../../src/iterators/promise.ts"],"names":["hasIterator","Symbol","asyncIterator","promiseIterator","promise","resolved","iterator","next","Promise","resolve","value","undefined","done","reject","then","catch"],"mappings":"AAAA,MAAMA,WAAW,GAAG,OAAOC,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACC,aAA5D;AAEA;;AACA,eAAe,SAASC,eAAT,CAA4BC,OAA5B,EAA+D;AAC5E,MAAIC,QAAQ,GAAG,KAAf;AAEA,QAAMC,QAAQ,GAAG;AACfC,IAAAA,IAAI,GAAwC;AAC1C,UAAIF,QAAJ,EAAc,OAAOG,OAAO,CAACC,OAAR,CAAgB;AAAEC,QAAAA,KAAK,EAAEC,SAAT;AAAoBC,QAAAA,IAAI,EAAE;AAA1B,OAAhB,CAAP;AACdP,MAAAA,QAAQ,GAAG,IAAX;AACA,aAAO,IAAIG,OAAJ,CAAY,UAAUC,OAAV,EAAmBI,MAAnB,EAA2B;AAC5CT,QAAAA,OAAO,CACJU,IADH,CACQ,UAAUJ,KAAV,EAAiB;AACrBD,UAAAA,OAAO,CAAC;AAAEC,YAAAA,KAAF;AAASE,YAAAA,IAAI,EAAE;AAAf,WAAD,CAAP;AACD,SAHH,EAIGG,KAJH,CAISF,MAJT;AAKD,OANM,CAAP;AAOD;;AAXc,GAAjB;;AAcA,MAAIb,WAAJ,EAAiB;AACfM,IAAAA,QAAQ,CAACL,MAAM,CAACC,aAAR,CAAR,GAAiC,YAA8B;AAC7D,aAAO,IAAP;AACD,KAFD;AAGD;;AAED,SAAOI,QAAP;AACD;AACD","sourcesContent":["const hasIterator = typeof Symbol !== \"undefined\" && Symbol.asyncIterator;\n\n/* c8 ignore start */\nexport default function promiseIterator<T>(promise): AsyncIterableIterator<T> {\n  let resolved = false;\n\n  const iterator = {\n    next(): Promise<IteratorResult<T, boolean>> {\n      if (resolved) return Promise.resolve({ value: undefined, done: true });\n      resolved = true;\n      return new Promise(function (resolve, reject) {\n        promise\n          .then(function (value) {\n            resolve({ value, done: false });\n          })\n          .catch(reject);\n      });\n    },\n  };\n\n  if (hasIterator) {\n    iterator[Symbol.asyncIterator] = function (): AsyncIterator<T> {\n      return this;\n    };\n  }\n\n  return iterator as AsyncIterableIterator<T>;\n}\n/* c8 ignore stop */\n"],"file":"promise.js"}