{"version":3,"file":"response-iterator.js","sources":["../../src/index.ts"],"sourcesContent":["import { AxiosResponse } from \"axios\";\nimport { Response as GotResponse } from \"got\";\nimport { Response as NodeResponse } from \"node-fetch\";\nimport { Readable as NodeReadableStream } from \"stream\";\nimport { Response as UndiciResponse } from \"undici\";\n\ninterface CrossFetchResponse {\n  _bodyBlob: Blob;\n}\n\nfunction streamIterator<T>(stream): AsyncIterableIterator<T> {\n  const iterator = stream[Symbol.asyncIterator]();\n  return {\n    next(): Promise<IteratorResult<T, boolean>> {\n      return iterator.next();\n    },\n    [Symbol.asyncIterator](): AsyncIterator<T> {\n      return this;\n    },\n  } as AsyncIterableIterator<T>;\n}\n\n/* c8 ignore start */\nfunction readerIterator<T>(reader): AsyncIterableIterator<T> {\n  return {\n    next(): Promise<IteratorResult<T, boolean>> {\n      return reader.read();\n    },\n    [Symbol.asyncIterator](): AsyncIterator<T> {\n      return this;\n    },\n  } as AsyncIterableIterator<T>;\n}\n\nfunction promiseIterator<T>(promise): AsyncIterableIterator<T> {\n  let resolved = false;\n  return {\n    next(): Promise<IteratorResult<T, boolean>> {\n      if (resolved) return Promise.resolve({ value: undefined, done: true });\n      resolved = true;\n      return new Promise(function (resolve, reject) {\n        promise\n          .then(function (value) {\n            resolve({ value, done: false });\n          })\n          .catch(reject);\n      });\n    },\n    [Symbol.asyncIterator](): AsyncIterator<T> {\n      return this;\n    },\n  } as AsyncIterableIterator<T>;\n}\n/* c8 ignore stop */\n\nexport type ResponseType = AxiosResponse | CrossFetchResponse | GotResponse | NodeResponse | Response | UndiciResponse;\n\n/**\n * @param response A response. Supports fetch, node-fetch, and cross-fetch\n */\nexport default function responseIterator<T>(response: ResponseType): AsyncIterableIterator<T> {\n  if (response === undefined) throw new Error(\"Missing response for responseIterator\");\n\n  // node node-fetch\n  if ((response as NodeResponse).body && (response as NodeResponse).body[Symbol.asyncIterator] !== undefined)\n    return streamIterator<T>((response as NodeResponse).body);\n  /* c8 ignore start */\n  // browser fetch or undici\n  else if ((response as Response).body && (response as Response).body.getReader)\n    return readerIterator<T>((response as Response).body.getReader());\n\n    // cross platform axios\n  else if ((response as AxiosResponse).data) {\n    if ((response as AxiosResponse<Blob>).data.stream)\n      return readerIterator<T>(((response as AxiosResponse<Blob>).data.stream() as unknown as ReadableStream<Uint8Array>).getReader());\n    else if ((response as AxiosResponse<NodeReadableStream>).data[Symbol.asyncIterator] !== undefined)\n      return streamIterator<T>((response as AxiosResponse<NodeReadableStream>).data);\n  }\n\n  // browser cross-fetch\n  else if ((response as CrossFetchResponse)._bodyBlob)\n    return promiseIterator<T>((response as CrossFetchResponse)._bodyBlob.arrayBuffer());\n  // node got\n  else if ((response as GotResponse).readable && (response as GotResponse)[Symbol.asyncIterator] !== undefined)\n    return streamIterator<T>(response as GotResponse);\n\n  /* c8 ignore stop */\n\n  throw new Error(\"Unknown body type for responseIterator\");\n}\n"],"names":["streamIterator","stream","iterator","Symbol","asyncIterator","next","readerIterator","reader","read","promiseIterator","promise","resolved","Promise","resolve","value","undefined","done","reject","then","responseIterator","response","Error","body","getReader","data","_bodyBlob","arrayBuffer","readable"],"mappings":";;;;;;;;;;;;;;;;;;;;;EAUA,SAASA,cAAT,CAA2BC,MAA3B,EAA6D;EAC3D,MAAMC,QAAQ,GAAGD,MAAM,CAACE,MAAM,CAACC,aAAR,CAAN,EAAjB;EACA;EACEC,IAAAA,IADF,kBAC8C;EAC1C,aAAOH,QAAQ,CAACG,IAAT,EAAP;EACD;EAHH,KAIGF,MAAM,CAACC,aAJV,cAI6C;EACzC,WAAO,IAAP;EACD,GANH;EAQD;EAED;;;EACA,SAASE,cAAT,CAA2BC,MAA3B,EAA6D;EAC3D;EACEF,IAAAA,IADF,kBAC8C;EAC1C,aAAOE,MAAM,CAACC,IAAP,EAAP;EACD;EAHH,KAIGL,MAAM,CAACC,aAJV,cAI6C;EACzC,WAAO,IAAP;EACD,GANH;EAQD;;EAED,SAASK,eAAT,CAA4BC,OAA5B,EAA+D;EAC7D,MAAIC,QAAQ,GAAG,KAAf;EACA;EACEN,IAAAA,IADF,kBAC8C;EAC1C,UAAIM,QAAJ,EAAc,OAAOC,OAAO,CAACC,OAAR,CAAgB;EAAEC,QAAAA,KAAK,EAAEC,SAAT;EAAoBC,QAAAA,IAAI,EAAE;EAA1B,OAAhB,CAAP;EACdL,MAAAA,QAAQ,GAAG,IAAX;EACA,aAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBI,MAAnB,EAA2B;EAC5CP,QAAAA,OAAO,CACJQ,IADH,CACQ,UAAUJ,KAAV,EAAiB;EACrBD,UAAAA,OAAO,CAAC;EAAEC,YAAAA,KAAK,EAALA,KAAF;EAASE,YAAAA,IAAI,EAAE;EAAf,WAAD,CAAP;EACD,SAHH,WAISC,MAJT;EAKD,OANM,CAAP;EAOD;EAXH,KAYGd,MAAM,CAACC,aAZV,cAY6C;EACzC,WAAO,IAAP;EACD,GAdH;EAgBD;EACD;;;EAIA;EACA;EACA;EACe,SAASe,gBAAT,CAA6BC,QAA7B,EAA+E;EAC5F,MAAIA,QAAQ,KAAKL,SAAjB,EAA4B,MAAM,IAAIM,KAAJ,CAAU,uCAAV,CAAN,CADgE;;EAI5F,MAAKD,QAAD,CAA2BE,IAA3B,IAAoCF,QAAD,CAA2BE,IAA3B,CAAgCnB,MAAM,CAACC,aAAvC,MAA0DW,SAAjG,EACE,OAAOf,cAAc,CAAKoB,QAAD,CAA2BE,IAA/B,CAArB;EACF;EACA;EAHA,OAIK,IAAKF,QAAD,CAAuBE,IAAvB,IAAgCF,QAAD,CAAuBE,IAAvB,CAA4BC,SAA/D,EACH,OAAOjB,cAAc,CAAKc,QAAD,CAAuBE,IAAvB,CAA4BC,SAA5B,EAAJ,CAArB,CADG;EAAA,OAIA,IAAKH,QAAD,CAA4BI,IAAhC,EAAsC;EACzC,QAAKJ,QAAD,CAAkCI,IAAlC,CAAuCvB,MAA3C,EACE,OAAOK,cAAc,CAAMc,QAAD,CAAkCI,IAAlC,CAAuCvB,MAAvC,EAAD,CAA2FsB,SAA3F,EAAJ,CAArB,CADF,KAEK,IAAKH,QAAD,CAAgDI,IAAhD,CAAqDrB,MAAM,CAACC,aAA5D,MAA+EW,SAAnF,EACH,OAAOf,cAAc,CAAKoB,QAAD,CAAgDI,IAApD,CAArB;EACH,GALI;EAAA,OAQA,IAAKJ,QAAD,CAAiCK,SAArC,EACH,OAAOhB,eAAe,CAAKW,QAAD,CAAiCK,SAAjC,CAA2CC,WAA3C,EAAJ,CAAtB,CADG;EAAA,OAGA,IAAKN,QAAD,CAA0BO,QAA1B,IAAuCP,QAAD,CAA0BjB,MAAM,CAACC,aAAjC,MAAoDW,SAA9F,EACH,OAAOf,cAAc,CAAIoB,QAAJ,CAArB;EAEF;;EAEA,QAAM,IAAIC,KAAJ,CAAU,wCAAV,CAAN;EACD;;;;;;;;"}