{"version":3,"file":"response-iterator.min.js","sources":["../../src/index.ts"],"sourcesContent":["import { AxiosResponse } from \"axios\";\nimport { Response as GotResponse } from \"got\";\nimport { Response as NodeResponse } from \"node-fetch\";\nimport { Readable as NodeReadableStream } from \"stream\";\nimport { Response as UndiciResponse } from \"undici\";\n\ninterface CrossFetchResponse {\n  _bodyBlob: Blob;\n}\n\nfunction streamIterator<T>(stream): AsyncIterableIterator<T> {\n  const iterator = stream[Symbol.asyncIterator]();\n  return {\n    next(): Promise<IteratorResult<T, boolean>> {\n      return iterator.next();\n    },\n    [Symbol.asyncIterator](): AsyncIterator<T> {\n      return this;\n    },\n  } as AsyncIterableIterator<T>;\n}\n\n/* c8 ignore start */\nfunction readerIterator<T>(reader): AsyncIterableIterator<T> {\n  return {\n    next(): Promise<IteratorResult<T, boolean>> {\n      return reader.read();\n    },\n    [Symbol.asyncIterator](): AsyncIterator<T> {\n      return this;\n    },\n  } as AsyncIterableIterator<T>;\n}\n\nfunction promiseIterator<T>(promise): AsyncIterableIterator<T> {\n  let resolved = false;\n  return {\n    next(): Promise<IteratorResult<T, boolean>> {\n      if (resolved) return Promise.resolve({ value: undefined, done: true });\n      resolved = true;\n      return new Promise(function (resolve, reject) {\n        promise\n          .then(function (value) {\n            resolve({ value, done: false });\n          })\n          .catch(reject);\n      });\n    },\n    [Symbol.asyncIterator](): AsyncIterator<T> {\n      return this;\n    },\n  } as AsyncIterableIterator<T>;\n}\n/* c8 ignore stop */\n\nexport type ResponseType = AxiosResponse | CrossFetchResponse | GotResponse | NodeResponse | Response | UndiciResponse;\n\n/**\n * @param response A response. Supports fetch, node-fetch, and cross-fetch\n */\nexport default function responseIterator<T>(response: ResponseType): AsyncIterableIterator<T> {\n  if (response === undefined) throw new Error(\"Missing response for responseIterator\");\n\n  // node node-fetch\n  if ((response as NodeResponse).body && (response as NodeResponse).body[Symbol.asyncIterator] !== undefined)\n    return streamIterator<T>((response as NodeResponse).body);\n  /* c8 ignore start */\n  // browser fetch or undici\n  else if ((response as Response).body && (response as Response).body.getReader)\n    return readerIterator<T>((response as Response).body.getReader());\n\n    // cross platform axios\n  else if ((response as AxiosResponse).data) {\n    if ((response as AxiosResponse<Blob>).data.stream)\n      return readerIterator<T>(((response as AxiosResponse<Blob>).data.stream() as unknown as ReadableStream<Uint8Array>).getReader());\n    else if ((response as AxiosResponse<NodeReadableStream>).data[Symbol.asyncIterator] !== undefined)\n      return streamIterator<T>((response as AxiosResponse<NodeReadableStream>).data);\n  }\n\n  // browser cross-fetch\n  else if ((response as CrossFetchResponse)._bodyBlob)\n    return promiseIterator<T>((response as CrossFetchResponse)._bodyBlob.arrayBuffer());\n  // node got\n  else if ((response as GotResponse).readable && (response as GotResponse)[Symbol.asyncIterator] !== undefined)\n    return streamIterator<T>(response as GotResponse);\n\n  /* c8 ignore stop */\n\n  throw new Error(\"Unknown body type for responseIterator\");\n}\n"],"names":["streamIterator","stream","iterator","Symbol","asyncIterator","next","this","readerIterator","reader","read","response","undefined","Error","body","getReader","data","_bodyBlob","promise","arrayBuffer","resolved","Promise","resolve","value","done","reject","then","readable"],"mappings":"yWAUA,SAASA,EAAkBC,OACnBC,EAAWD,EAAOE,OAAOC,2BAE7BC,uBACSH,EAASG,SAEjBF,OAAOC,iCACCE,QAMb,SAASC,EAAkBC,aAEvBH,uBACSG,EAAOC,SAEfN,OAAOC,iCACCE,eA+BE,SAA6BI,WACzBC,IAAbD,EAAwB,MAAM,IAAIE,MAAM,4CAGvCF,EAA0BG,WAAkEF,IAAzDD,EAA0BG,KAAKV,OAAOC,eAC5E,OAAOJ,EAAmBU,EAA0BG,MAGjD,GAAKH,EAAsBG,MAASH,EAAsBG,KAAKC,UAClE,OAAOP,EAAmBG,EAAsBG,KAAKC,aAGlD,GAAKJ,EAA2BK,KAAM,IACpCL,EAAiCK,KAAKd,OACzC,OAAOM,EAAoBG,EAAiCK,KAAKd,SAAmDa,aACjH,QAAmFH,IAA9ED,EAA+CK,KAAKZ,OAAOC,eACnE,OAAOJ,EAAmBU,EAA+CK,UAIxE,CAAA,GAAKL,EAAgCM,UACxC,OA/CwBC,EA+CGP,EAAgCM,UAAUE,cA9CnEC,GAAW,KAEbd,uBACMc,EAAiBC,QAAQC,QAAQ,CAAEC,WAAOX,EAAWY,MAAM,KAC/DJ,GAAW,EACJ,IAAIC,SAAQ,SAAUC,EAASG,GACpCP,EACGQ,MAAK,SAAUH,GACdD,EAAQ,CAAEC,MAAAA,EAAOC,MAAM,aAElBC,SAGZrB,OAAOC,iCACCE,QAkCN,GAAKI,EAAyBgB,eAAgEf,IAAnDD,EAAyBP,OAAOC,eAC9E,OAAOJ,EAAkBU,GAlD7B,IAA4BO,EACtBE,QAqDE,IAAIP,MAAM"}