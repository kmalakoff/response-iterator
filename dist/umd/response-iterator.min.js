!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?module.exports=r():"function"==typeof define&&define.amd?define(r):(e="undefined"!=typeof globalThis?globalThis:e||self).responseIterator=r()}(this,(function(){"use strict";function e(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function r(r){var t=r[Symbol.asyncIterator]();return e({next:function(){return t.next()}},Symbol.asyncIterator,(function(){return this}))}function t(r){return e({next:function(){return r.read()}},Symbol.asyncIterator,(function(){return this}))}return function(n){if(void 0===n)throw new Error("Missing response for responseIterator");if(n.body&&void 0!==n.body[Symbol.asyncIterator])return r(n.body);if(n.body&&n.body.getReader)return t(n.body.getReader());if(n.data){if(n.data.stream)return t(n.data.stream().getReader());if(void 0!==n.data[Symbol.asyncIterator])return r(n.data)}else{if(n._bodyBlob)return o=n._bodyBlob.arrayBuffer(),a=!1,e({next:function(){return a?Promise.resolve({value:void 0,done:!0}):(a=!0,new Promise((function(e,r){o.then((function(r){e({value:r,done:!1})})).catch(r)})))}},Symbol.asyncIterator,(function(){return this}));if(n.readable&&void 0!==n[Symbol.asyncIterator])return r(n)}var o,a;throw new Error("Unknown body type for responseIterator")}}));
//# sourceMappingURL=response-iterator.min.js.map
