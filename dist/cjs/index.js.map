{"version":3,"file":"index.js","sources":["../../src/index.ts"],"sourcesContent":["import { Response as NodeResponse } from \"node-fetch\";\n\ninterface CrossFetchResponse {\n  _bodyBlob: Blob;\n}\n\nfunction streamIterator<T>(stream): AsyncIterableIterator<T> {\n  const iterator = stream[Symbol.asyncIterator]();\n  return {\n    next(): Promise<IteratorResult<T, boolean>> {\n      return iterator.next();\n    },\n    [Symbol.asyncIterator](): AsyncIterator<T> {\n      return this;\n    },\n  } as AsyncIterableIterator<T>;\n}\n\n/* c8 ignore start */\nfunction readerIterator<T>(reader): AsyncIterableIterator<T> {\n  return {\n    next(): Promise<IteratorResult<T, boolean>> {\n      return reader.read();\n    },\n    [Symbol.asyncIterator](): AsyncIterator<T> {\n      return this;\n    },\n  } as AsyncIterableIterator<T>;\n}\n\nfunction promiseIterator<T>(promise): AsyncIterableIterator<T> {\n  let resolved = false;\n  return {\n    next(): Promise<IteratorResult<T, boolean>> {\n      if (resolved) return Promise.resolve({ value: undefined, done: true });\n      resolved = true;\n      return new Promise(function (resolve, reject) {\n        promise\n          .then(function (value) {\n            resolve({ value, done: false });\n          })\n          .catch(reject);\n      });\n    },\n    [Symbol.asyncIterator](): AsyncIterator<T> {\n      return this;\n    },\n  } as AsyncIterableIterator<T>;\n}\n/* c8 ignore stop */\n\n/**\n * @param response A response. Supports fetch, node-fetch, and cross-fetch\n */\nexport default function responseIterator<T>(\n  response: Response | NodeResponse | CrossFetchResponse\n): AsyncIterableIterator<T> {\n  if (response === undefined) throw new Error(\"Missing response for responseIterator\");\n\n  // node-fetch\n  if ((response as NodeResponse).body && (response as NodeResponse).body[Symbol.asyncIterator] !== undefined)\n    return streamIterator<T>((response as NodeResponse).body);\n  /* c8 ignore start */\n  // browser fetch\n  else if ((response as Response).body && (response as Response).body.getReader)\n    return readerIterator<T>((response as Response).body.getReader());\n  // browser cross-fetch\n  else if ((response as CrossFetchResponse)._bodyBlob)\n    return promiseIterator<T>((response as CrossFetchResponse)._bodyBlob.arrayBuffer());\n  /* c8 ignore stop */\n\n  throw new Error(\"Unknown body type for responseIterator\");\n}\n"],"names":["streamIterator","stream","iterator","Symbol","asyncIterator","next","readerIterator","reader","read","promiseIterator","promise","resolved","Promise","resolve","value","undefined","done","reject","then","responseIterator","response","Error","body","getReader","_bodyBlob","arrayBuffer"],"mappings":";;;;;;;;;;;;;;;;;AAMA,SAASA,cAAT,CAA2BC,MAA3B,EAA6D;AAC3D,MAAMC,QAAQ,GAAGD,MAAM,CAACE,MAAM,CAACC,aAAR,CAAN,EAAjB;AACA;AACEC,IAAAA,IADF,kBAC8C;AAC1C,aAAOH,QAAQ,CAACG,IAAT,EAAP;AACD;AAHH,KAIGF,MAAM,CAACC,aAJV,cAI6C;AACzC,WAAO,IAAP;AACD,GANH;AAQD;AAED;;;AACA,SAASE,cAAT,CAA2BC,MAA3B,EAA6D;AAC3D;AACEF,IAAAA,IADF,kBAC8C;AAC1C,aAAOE,MAAM,CAACC,IAAP,EAAP;AACD;AAHH,KAIGL,MAAM,CAACC,aAJV,cAI6C;AACzC,WAAO,IAAP;AACD,GANH;AAQD;;AAED,SAASK,eAAT,CAA4BC,OAA5B,EAA+D;AAC7D,MAAIC,QAAQ,GAAG,KAAf;AACA;AACEN,IAAAA,IADF,kBAC8C;AAC1C,UAAIM,QAAJ,EAAc,OAAOC,OAAO,CAACC,OAAR,CAAgB;AAAEC,QAAAA,KAAK,EAAEC,SAAT;AAAoBC,QAAAA,IAAI,EAAE;AAA1B,OAAhB,CAAP;AACdL,MAAAA,QAAQ,GAAG,IAAX;AACA,aAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBI,MAAnB,EAA2B;AAC5CP,QAAAA,OAAO,CACJQ,IADH,CACQ,UAAUJ,KAAV,EAAiB;AACrBD,UAAAA,OAAO,CAAC;AAAEC,YAAAA,KAAK,EAALA,KAAF;AAASE,YAAAA,IAAI,EAAE;AAAf,WAAD,CAAP;AACD,SAHH,WAISC,MAJT;AAKD,OANM,CAAP;AAOD;AAXH,KAYGd,MAAM,CAACC,aAZV,cAY6C;AACzC,WAAO,IAAP;AACD,GAdH;AAgBD;AACD;;AAEA;AACA;AACA;;;AACe,SAASe,gBAAT,CACbC,QADa,EAEa;AAC1B,MAAIA,QAAQ,KAAKL,SAAjB,EAA4B,MAAM,IAAIM,KAAJ,CAAU,uCAAV,CAAN,CADF;;AAI1B,MAAKD,QAAD,CAA2BE,IAA3B,IAAoCF,QAAD,CAA2BE,IAA3B,CAAgCnB,MAAM,CAACC,aAAvC,MAA0DW,SAAjG,EACE,OAAOf,cAAc,CAAKoB,QAAD,CAA2BE,IAA/B,CAArB;AACF;AACA;AAHA,OAIK,IAAKF,QAAD,CAAuBE,IAAvB,IAAgCF,QAAD,CAAuBE,IAAvB,CAA4BC,SAA/D,EACH,OAAOjB,cAAc,CAAKc,QAAD,CAAuBE,IAAvB,CAA4BC,SAA5B,EAAJ,CAArB,CADG;AAAA,OAGA,IAAKH,QAAD,CAAiCI,SAArC,EACH,OAAOf,eAAe,CAAKW,QAAD,CAAiCI,SAAjC,CAA2CC,WAA3C,EAAJ,CAAtB;AACF;;AAEA,QAAM,IAAIJ,KAAJ,CAAU,wCAAV,CAAN;AACD;;;;"}